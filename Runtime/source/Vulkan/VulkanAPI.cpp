#ifdef ENABLE_API_VULKAN

#include "VulkanAPI.h"

namespace RHINO::APIVulkan {
    namespace EXT {
#define RHINO_APPLY(f) ::PFN_##f f;
        RHINO_VULKAN_API_FUNCS()
#undef RHINO_APPLY
    }

    void LoadVulkanAPI(VkInstance instance, PFN_vkGetInstanceProcAddr getProcAddr) noexcept {
#define RHINO_APPLY(f) EXT::f = reinterpret_cast<PFN_##f>(getProcAddr(instance, #f));
        RHINO_VULKAN_API_FUNCS()
#undef RHINO_APPLY
    }

    std::string VkResultToStr(VkResult s) noexcept {
#define RHINO_VK_RES_SWITCH_CASE(status) case status: return #status
        switch (s) {
            RHINO_VK_RES_SWITCH_CASE(VK_SUCCESS);
            RHINO_VK_RES_SWITCH_CASE(VK_NOT_READY);
            RHINO_VK_RES_SWITCH_CASE(VK_TIMEOUT);
            RHINO_VK_RES_SWITCH_CASE(VK_EVENT_SET);
            RHINO_VK_RES_SWITCH_CASE(VK_EVENT_RESET);
            RHINO_VK_RES_SWITCH_CASE(VK_INCOMPLETE);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_OUT_OF_HOST_MEMORY);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_OUT_OF_DEVICE_MEMORY);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INITIALIZATION_FAILED);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_DEVICE_LOST);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_MEMORY_MAP_FAILED);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_LAYER_NOT_PRESENT);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_EXTENSION_NOT_PRESENT);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_FEATURE_NOT_PRESENT);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INCOMPATIBLE_DRIVER);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_TOO_MANY_OBJECTS);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_FORMAT_NOT_SUPPORTED);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_FRAGMENTED_POOL);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_UNKNOWN);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_OUT_OF_POOL_MEMORY);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INVALID_EXTERNAL_HANDLE);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_FRAGMENTATION);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS);
            RHINO_VK_RES_SWITCH_CASE(VK_PIPELINE_COMPILE_REQUIRED);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_SURFACE_LOST_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_SUBOPTIMAL_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_OUT_OF_DATE_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_VALIDATION_FAILED_EXT);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INVALID_SHADER_NV);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_NOT_PERMITTED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT);
            RHINO_VK_RES_SWITCH_CASE(VK_THREAD_IDLE_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_THREAD_DONE_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_OPERATION_DEFERRED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_OPERATION_NOT_DEFERRED_KHR);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_COMPRESSION_EXHAUSTED_EXT);
            RHINO_VK_RES_SWITCH_CASE(VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT);
            RHINO_VK_RES_SWITCH_CASE(VK_RESULT_MAX_ENUM);
        }
    }
}// namespace RHINO::APIVulkan

#endif// ENABLE_API_VULKAN
